[["phylogenetic-reconstruction.html", "Chapter 5 Phylogenetic reconstruction 5.1 Identify quasi single-copy genes 5.2 Run phylogenetic reconstruction", " Chapter 5 Phylogenetic reconstruction 5.1 Identify quasi single-copy genes Uniform header sequences, since they come from multiple sources and they are all messed up and incosistent. # rename protein sequences for file in *maker.aa.fa; do NAME=$(basename $file .maker.aa.fa)_; sed -i &quot;s/&gt;/&gt;$NAME/g&quot; $file; done for file in *[0-9].aa.fa; do NAME=$(basename $file .aa.fa)_; sed -i &quot;s/&gt;/&gt;$NAME/g&quot; $file; done # concatenate all files together cat *.aa.fa &gt; all_plusKV.aa.fa We will create a set of non-redundant S. cerevisiae proteins, by clustering them based on a 70% sequence similarity groups. # cluster sequences cd-hit -i all_plusKV.aa.fa -o all_plusKV.aa.0.7.fa -T 24 -M 16000 -c 0.7 -d 60 We now check protein clusters having only a single copy gene per yeast strain. # filter clusters into small one gene ortholog clusters python3.5 Vikings.filterCDHITclusters.py --clstr all_plusKV.aa.0.7.fa.clstr # clean folder mkdir -p 01_filter_clusters/01_clusters_311-350 mkdir -p 01_filter_clusters/02_clusters_311-350_noDuplicates mv all_plusKV.aa.0.7.fa.clstr.fltr.clstr.* 01_filter_clusters # remove duplicated genes from orthologs clusters python3.5 Vikings.filterCDHITclustersDeduplicates.py \\ --indir 01_filter_clusters/01_clusters_311-350 \\ --outdir 01_filter_clusters/02_clusters_311-350_noDuplicate # retrieve amino acid sequences mkdir -p 01_filter_clusters/03_clusters_aa # format headers sed -i &#39;s/ .*//g&#39; ../all_plusKV.aa.fa sed -i &#39;s/|.*//g&#39; ../all_plusKV.aa.fa &amp; for file in 02_clusters_311-350_noDuplicates/*; do sed -i &#39;s/|.*//g&#39; $file ; done python3.5 Vikings.CDHITclustersList2ntSeq.py \\ --fasta all_plusKV.aa.fa \\ --indir ./01_filter_clusters/02_clusters_311-350_noDuplicates/ \\ --outdir ./01_filter_clusters/03_clusters_aa/ 5.1.1 Create animo acid and codon alignments Prepare nucleotidic sequences mkdir 02_nt_start/ # reformat the header to match aa for file in *.fa; do STRAIN=$(basename $file | tr &#39;.&#39; &#39; &#39; | cut -f 1 -d &quot; &quot;); sed -i &#39;s/ .*//g&#39; $file; sed -i &#39;s/|.*//g&#39; $file; sed -i &#39;s/&gt;/&gt;_/g&#39; $file; sed -i &quot;s/&gt;/&gt;$STRAIN/g&quot; $file; done # select nt per cluster cat *.fa &gt; ../all_plusKV.nt.fa # correct worng headers sed -i &#39;s/Skudr_Skudr/Skudr/g&#39; all_plusKV.nt.fa; sed -i &#39;s/Suvar_Suvar/Suvar/g&#39; all_plusKV.nt.fa; sed -i &#39;s/Seuba_Seuba/Seuba/g&#39; all_plusKV.nt.fa mkdir 03_nt_clusters # cluster NT cd-hit -T 72 -c 0.98 -aL 0.95 -d 0 -i all_plusKV.nt.fa -o all_plusKV.nt.098.fa # extract cluster gene lists python3.5 Vikings.filterCDHITclusters.nt.py --clstr all_plusKV.nt.098.fa.clstr # select genes cat gene.lst \\ | xargs -n 1 -P 64 -I {} sh -c \\ &#39;echo {}; \\ for file in 00_nt_clusters_lst/*.clstr.*; do if grep -q {} $file; then cp $file 00_nt_clusters_lst_select; fi; done&#39; # add Hittinger IDs for file in 99_Hittinger/coding/*.fsa; do grep &quot;&gt;&quot; $file \\ | sed &#39;s/&gt;//g&#39; \\ &gt; 99_Hittinger/geneList/$(basename $file .fsa).lst; done python3.5 Vikings.addHittingerID.py \\ --CDlists 01_nt_clusters_lst_select \\ --Hit 99_Hittinger/geneList/ \\ --outdir 02_nt_clusters_lst_select_Hittinger cat all_plusKV.aa.fa 99_Hittinger/coding/*.aa.mfa &gt; all_plusKV.Hit.aa.fa cat all_plusKV.nt.fa 99_Hittinger/coding/*.fsa &gt; all_plusKV.Hit.nt.fa for file in 02_nt_clusters_lst_select_Hittinger/*.Hit; do sed -i &#39;s/ .*//g&#39; $file ; done # select aa for each cluster python3.5 Vikings.CDHITclustersList2ntSeq.py \\ --fasta all_plusKV.Hit.aa.fa \\ --indir ./02_nt_clusters_lst_select_Hittinger \\ --outdir ./03_aa_clusters/ # align aa clusters ls ./03_aa_clusters/ \\ | xargs -n 8 -P 8 -I {} sh -c \\ &#39;mafft --localpair --maxiterate 1000 --ep 0.123 --thread 8 ./03_aa_clusters/{} &gt; ./04_aa_clusters_aln/{}.aln.fa&#39; for file in ./04_aa_clusters_aln/*.fa; do perl ~/rubbish/00_Brigida_starting_files/pal2nal.v14/pal2nal.pl \\ $file 05_nt_clusters/$(basename $file .aln.fa)\\ -output fasta \\ &gt; 06_nt_clusters_aln/$(basename $file .fa).fa; done # rename headers to keep only strain name find 05_nt_align_long/* | xargs -n 1 -P 64 sed -i &#39;s/_.*//g&#39; mkdir ../07_nt_aln_ready; for file in ./*; do NAME=$(grep S288C $file | sed &#39;s/&gt;S288C_//g&#39;); cp $file ../07_nt_aln_ready/$NAME.nt.aln.fa; done # rename headers to keep only strain name find 07_nt_aln_ready/* | xargs -n 1 -P 64 sed -i &#39;s/_.*//g&#39; 5.2 Run phylogenetic reconstruction This resulted in 1,390 single-copy genes identified across 151 yeast strains of Gallone et al.2016 and the 44 kveiks strains in this study. Lets build a Maximum Likelihood tree to reconstruct the phylogenetic relationships between these S. cerevisiae yeast strains! 5.2.1 Create ML tree # concatenate alignmnets mkdir 08_concatenated_ML perl catfasta2phyml.pl \\ --fasta \\ --concatenate 07_nt_aln_ready/*.fa \\ &gt; 08_concatenated_ML/clstr.all.concat.nt.align.fa # ML analysis on concatenated alignment ~/bin/iqtree-1.6.8-Linux/bin/iqtree \\ -s clstr.all.concat.nt.align.fa \\ -st CODON \\ -pre clstr.all.concat.nt.align \\ -nt 52 \\ -wbt \\ -bb 1000 \\ -alrt 1000 \\ -m MG+F1X4 Plot the reconstructed phylogenetic tree. # load tree best_tree = read.tree(paste(mainDir, &quot;clstr.all.concat.nt.align.short.tre&quot;, sep = &quot;&quot;)) best_tree = as.phylo(best_tree) best_tree$node.label = as.numeric(as.character(best_tree$node.label)) best_tree = ape::root(best_tree, which(best_tree$tip.label %in% c(&quot;Skud&quot;)), edgelabel = TRUE) best_tree = ladderize(best_tree, right = TRUE) # load annotations tree_annot_raw = read.table(paste(mainDir, &quot;genetrees.output.BS.annot.txt&quot;, sep = &quot;&quot;), sep = &quot;\\t&quot;, header = TRUE, stringsAsFactors = FALSE) tree_annot_raw = data.frame(tree_annot_raw) tree_annot_raw$Origin = factor(tree_annot_raw$Origin, levels = c(&quot;North-West Norway&quot;, &quot;Eastern Norway&quot;, &quot;South-West Norway&quot;, &quot;Latvia&quot;, &quot;Lithuania&quot;, &quot;Russia&quot;, &quot; &quot;)) # plot p = ggtree(best_tree, layout = &quot;fan&quot;, open.angle = 0) + geom_tiplab2(offset = 0.001, align = TRUE, size = 2.75) + geom_nodepoint(aes(fill = cut(as.numeric(label), c(0, 70, 90, 100))), shape = 21, size = 2) + theme_tree(legend.position = c(0.1, 0.55)) + scale_fill_manual(values = c(&quot;white&quot;, &quot;grey&quot;, &quot;black&quot;), guide = &quot;legend&quot;, name = &quot;Bootstrap&quot;, breaks = c(&quot;(90,100]&quot;, &quot;(70,90]&quot;, &quot;(0,70]&quot;), labels = expression(BP&gt;=90,70 &lt;= BP * &quot; &lt; 90&quot;, BP &lt; 70)) p1 = p + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Clade), color = NA, offset = 0.00975, pwidth = 0.001) + scale_fill_manual(values = c(&#39;#e6194b&#39;, &#39;#3cb44b&#39;, &#39;#ffe119&#39;, &#39;#4363d8&#39;, &#39;#f58231&#39;, &#39;#911eb4&#39;, &#39;#46f0f0&#39;, &#39;#f032e6&#39;, &#39;#bcf60c&#39;, &#39;#fabebe&#39;, &#39;#008080&#39;, &#39;#e6beff&#39;, &#39;#9a6324&#39;, &#39;#fffac8&#39;, &#39;#800000&#39;, &#39;#aaffc3&#39;, &#39;#808000&#39;, &#39;#ffd8b1&#39;, &#39;#000075&#39;, &#39;#808080&#39;, &#39;#ffffff&#39;, &#39;#000000&#39;)) p2 = p1 + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Origin), color = NA, offset = 0.0115, pwidth = 0.001) + scale_fill_manual(values = c(&#39;#03045e&#39;, &#39;#0077b6&#39;, &#39;#00b4d8&#39;, &#39;#808000&#39;, &#39;#aaffc3&#39;, &#39;#800000&#39;, &#39;#ffffff&#39;)) + theme(legend.position = c(1.1, 0.5)) p2 Figure 5.1: Farmhouse yeasts Maximum Likelihood phynogenetic recontruction Based on the concatenated ML tree, Farmhouse yeasts seems not monophyletic. However, the well enstablished phylogenetic relationships between industrial S. cerevisiae strains (e.g.: Beer1, Beer2, Wine clades, see Gallone et al.2016, Peter et al.2018) were not reconstructed, suggesting that the presence of highly heterozigous and possibly hybrid (Preiss et al.2018) Farmhouse yeasts may impair the phylogenetic reconstruction. Lets see if the 1,390 genes we have selected for the phylogenetic reconstruction can confirm the phylogenetic relationships between industrial clades reconstructed by Gallone et al.2016, Peter et al.2018). We therefore remove the farmhouse yeasts sequences from the alignments, recompute the aa and nt alignments and run the supermatrix ML analysis. # load tree best_tree = read.tree(paste(mainDir, &quot;clstr.all.concat.nt.align.noKV.short.tre&quot;, sep = &quot;&quot;)) best_tree = as.phylo(best_tree) best_tree$node.label = as.numeric(as.character(best_tree$node.label)) best_tree = ape::root(best_tree, which(best_tree$tip.label %in% c(&quot;Skud&quot;)), edgelabel = TRUE) best_tree = ladderize(best_tree, right = TRUE) # load annotations tree_annot_raw = read.table(paste(mainDir, &quot;genetrees.output.BS.annot.txt&quot;, sep = &quot;&quot;), sep = &quot;\\t&quot;, header = TRUE, stringsAsFactors = FALSE) tree_annot_raw = data.frame(tree_annot_raw) tree_annot_raw$Origin = factor(tree_annot_raw$Origin, levels = c(&quot;North-West Norway&quot;, &quot;Eastern Norway&quot;, &quot;South-West Norway&quot;, &quot;Latvia&quot;, &quot;Lithuania&quot;, &quot;Russia&quot;, &quot; &quot;)) # plot p = ggtree(best_tree, layout = &quot;fan&quot;, open.angle = 0) + geom_tiplab2(offset = 0.001, align = TRUE, size = 2.75) + geom_nodepoint(aes(fill = cut(as.numeric(label), c(0, 70, 90, 100))), shape = 21, size = 2) + theme_tree(legend.position = c(0.1, 0.55)) + scale_fill_manual(values = c(&quot;white&quot;, &quot;grey&quot;, &quot;black&quot;), guide = &quot;legend&quot;, name = &quot;Bootstrap&quot;, breaks = c(&quot;(90,100]&quot;, &quot;(70,90]&quot;, &quot;(0,70]&quot;), labels = expression(BP&gt;=90,70 &lt;= BP * &quot; &lt; 90&quot;, BP &lt; 70)) p1 = p + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Clade), color = NA, offset = 0.00975, pwidth = 0.001) + scale_fill_manual(values = c(&#39;#e6194b&#39;, &#39;#3cb44b&#39;, &#39;#ffe119&#39;, &#39;#4363d8&#39;, &#39;#f58231&#39;, &#39;#911eb4&#39;, &#39;#46f0f0&#39;, &#39;#f032e6&#39;, &#39;#bcf60c&#39;, &#39;#fabebe&#39;, &#39;#008080&#39;, &#39;#e6beff&#39;, &#39;#9a6324&#39;, &#39;#fffac8&#39;, &#39;#800000&#39;, &#39;#aaffc3&#39;, &#39;#808000&#39;, &#39;#ffd8b1&#39;, &#39;#000075&#39;, &#39;#808080&#39;, &#39;#ffffff&#39;, &#39;#000000&#39;)) p2 = p1 + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Origin), color = NA, offset = 0.0115, pwidth = 0.001) + scale_fill_manual(values = c(&#39;#03045e&#39;, &#39;#0077b6&#39;, &#39;#00b4d8&#39;, &#39;#808000&#39;, &#39;#aaffc3&#39;, &#39;#800000&#39;, &#39;#ffffff&#39;)) + theme(legend.position = c(1.1, 0.5)) p2 Figure 5.2: Industrial yeasts Maximum Likelihood phynogenetic recontruction Yes, we can confirm the well enstablished phylogenetic relationships between already sequenced yeast straind from the industrial clades based on a supermatrix analysis of the concatenated selected 1,390 genes. 5.2.2 Create coalescence-based tree As seen, ML approaches fail to reconstruct an expected phylogenetic tree of S. cerevisiae when Farmhouse yeasts are included. To better handle high levels of heterozygosity and partial lineage sorting, we inferred the species tree by applying coalescence-based phylognetic reconstruction on the single-gene ML trees. [supermatrix analyses are based on large datasets and can use complex models that can account for the heterogeneity of the substitution process, but cannot account for gene-tree species-tree incongruence, while coalescence-based approaches accommodate incomplete lineage sorting, but rely on topologies inferred from small datasets using simpler models that make them more sensitive to stochastic noise] Lets reconstruct the single gene ML trees. # run IQtree in parallel for each nt gene alignment ls ../07_nt_aln_ready/*.fa \\ | xargs -n 8 -P 8 -I {} sh -c \\ &#39;~/bin/iqtree-1.6.8-Linux/bin/iqtree \\ -s {} \\ -st CODON \\ -pre {} \\ -nt 64 \\ -wbt \\ -bb 1000 \\ -alrt 1000 \\ -m MG+F1X4&#39; Lets run a coalescence based approach on the reonstructed single-gene ML trees plus the 1,000 ultrafast Boostrap trees generated for each tree by IQtree (~1,400,000 single-gene tree). The coalescensce-based phylogeny was inferred 100 times allowing gene resampling to obtain Bootstrap estimated support values for each node. # colaescence-based species tree java -Xmx30000M -jar ~/bin/Astral/astral.5.6.3.jar \\ --bootstraps genetrees.input.BS \\ --gene-resampling \\ -r 100 \\ --input genetrees.input.tre \\ --output genetrees.output.BS.tre \\ 2&gt; genetrees.output.BS.log Plot the reconstructed species tree (based on coalescence). # load tree best_tree = read.tree(paste(mainDir, &quot;genetrees.output.BS.best.tre&quot;, sep = &quot;&quot;)) best_tree = as.phylo(best_tree) best_tree$node.label = as.numeric(as.character(best_tree$node.label)) best_tree = ape::root(best_tree, which(best_tree$tip.label %in% c(&quot;Skud&quot;)), edgelabel = TRUE) best_tree = ladderize(best_tree, right = TRUE) # load annotations tree_annot_raw = read.table(paste(mainDir, &quot;genetrees.output.BS.annot.txt&quot;, sep = &quot;&quot;), sep = &quot;\\t&quot;, header = TRUE, stringsAsFactors = FALSE) tree_annot_raw = data.frame(tree_annot_raw) tree_annot_raw$Origin = factor(tree_annot_raw$Origin, levels = c(&quot;North-West Norway&quot;, &quot;Eastern Norway&quot;, &quot;South-West Norway&quot;, &quot;Latvia&quot;, &quot;Lithuania&quot;, &quot;Russia&quot;, &quot; &quot;)) # plot p = ggtree(best_tree, layout = &quot;fan&quot;, open.angle = 0) + geom_tiplab2(offset = 3, size = 2.75) + geom_nodepoint(aes(fill = cut(as.numeric(label), c(0, 70, 90, 100))), shape = 21, size = 2) + theme_tree(legend.position = c(0.1, 0.55)) + scale_fill_manual(values = c(&quot;white&quot;, &quot;grey&quot;, &quot;black&quot;), guide = &quot;legend&quot;, name = &quot;Bootstrap&quot;, breaks = c(&quot;(90,100]&quot;, &quot;(70,90]&quot;, &quot;(0,70]&quot;), labels = expression(BP&gt;=90,70 &lt;= BP * &quot; &lt; 90&quot;, BP &lt; 70)) p = flip(p, 250, 317) p1 = p + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Clade), color = NA, offset = 0.04, size = 0.02) + scale_fill_manual(values = c(&#39;#e6194b&#39;, &#39;#3cb44b&#39;, &#39;#ffe119&#39;, &#39;#4363d8&#39;, &#39;#f58231&#39;, &#39;#911eb4&#39;, &#39;#46f0f0&#39;, &#39;#f032e6&#39;, &#39;#bcf60c&#39;, &#39;#fabebe&#39;, &#39;#008080&#39;, &#39;#e6beff&#39;, &#39;#9a6324&#39;, &#39;#fffac8&#39;, &#39;#800000&#39;, &#39;#aaffc3&#39;, &#39;#808000&#39;, &#39;#ffd8b1&#39;, &#39;#000075&#39;, &#39;#808080&#39;, &#39;#ffffff&#39;, &#39;#000000&#39;)) p2 = p1 + new_scale_fill() + geom_fruit(data = tree_annot_raw, geom = geom_tile, mapping = aes(y = Strain, fill = Origin), color = NA, offset = 0.06, size = 0.02) + scale_fill_manual(values = c(&#39;#03045e&#39;, &#39;#0077b6&#39;, &#39;#00b4d8&#39;, &#39;#808000&#39;, &#39;#aaffc3&#39;, &#39;#800000&#39;, &#39;#ffffff&#39;)) + theme(legend.position = c(1.1, 0.5)) p2 Figure 5.3: Farmhouse yeasts coalescence-based phynogenetic recontruction "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
